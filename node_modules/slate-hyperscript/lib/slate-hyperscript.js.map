{"version":3,"file":"slate-hyperscript.js","sources":["../src/creators.js","../src/index.js"],"sourcesContent":["import {\n  Annotation,\n  Document,\n  Mark,\n  Node,\n  Point,\n  Selection,\n  Text,\n  Value,\n} from 'slate'\n\n/**\n * Auto-incrementing ID to keep track of paired annotations.\n *\n * @type {Number}\n */\n\nlet uid = 0\n\n/**\n * Create an anchor point.\n *\n * @param {String} tagName\n * @param {Object} attributes\n * @param {Array} children\n * @return {AnchorPoint}\n */\n\nexport function createAnchor(tagName, attributes, children) {\n  return new AnchorPoint(attributes)\n}\n\n/**\n * Create a block.\n *\n * @param {String} tagName\n * @param {Object} attributes\n * @param {Array} children\n * @return {Block}\n */\n\nexport function createBlock(tagName, attributes, children) {\n  const attrs = { ...attributes, object: 'block' }\n  const block = createNode(null, attrs, children)\n  return block\n}\n\n/**\n * Create a cursor point.\n *\n * @param {String} tagName\n * @param {Object} attributes\n * @param {Array} children\n * @return {CursorPoint}\n */\n\nexport function createCursor(tagName, attributes, children) {\n  return new CursorPoint(attributes)\n}\n\n/**\n * Create a annotation point, or wrap a list of leaves and set the annotation\n * point tracker on them.\n *\n * @param {String} tagName\n * @param {Object} attributes\n * @param {Array} children\n * @return {AnnotationPoint|List<Leaf>}\n */\n\nexport function createAnnotation(tagName, attributes, children) {\n  const { key, data } = attributes\n  const type = tagName\n\n  if (key) {\n    return new AnnotationPoint({ id: key, type, data })\n  }\n\n  const texts = createChildren(children)\n  const first = texts.first()\n  const last = texts.last()\n  const id = `${uid++}`\n  const start = new AnnotationPoint({ id, type, data })\n  const end = new AnnotationPoint({ id, type, data })\n  setPoint(first, start, 0)\n  setPoint(last, end, last.text.length)\n  return texts\n}\n\n/**\n * Create a document.\n *\n * @param {String} tagName\n * @param {Object} attributes\n * @param {Array} children\n * @return {Document}\n */\n\nexport function createDocument(tagName, attributes, children) {\n  const attrs = { ...attributes, object: 'document' }\n  const document = createNode(null, attrs, children)\n  return document\n}\n\n/**\n * Create a focus point.\n *\n * @param {String} tagName\n * @param {Object} attributes\n * @param {Array} children\n * @return {FocusPoint}\n */\n\nexport function createFocus(tagName, attributes, children) {\n  return new FocusPoint(attributes)\n}\n\n/**\n * Create an inline.\n *\n * @param {String} tagName\n * @param {Object} attributes\n * @param {Array} children\n * @return {Inline}\n */\n\nexport function createInline(tagName, attributes, children) {\n  const attrs = { ...attributes, object: 'inline' }\n  const inline = createNode(null, attrs, children)\n  return inline\n}\n\n/**\n * Create a list of leaves from a mark.\n *\n * @param {String} tagName\n * @param {Object} attributes\n * @param {Array} children\n * @return {List<Leaf>}\n */\n\nexport function createMark(tagName, attributes, children) {\n  const { key, ...mark } = attributes\n  const marks = Mark.createSet([mark])\n  const list = createChildren(children)\n  let node\n\n  if (list.size > 1) {\n    throw new Error(\n      `The <mark> hyperscript tag must only contain a single node's worth of children.`\n    )\n  } else if (list.size === 0) {\n    node = Text.create({ key, marks })\n  } else {\n    node = list.first()\n\n    node = preservePoints(node, n => {\n      if (key) n = n.set('key', key)\n      if (marks) n = n.set('marks', n.marks.union(marks))\n      return n\n    })\n  }\n\n  return node\n}\n\n/**\n * Create a node.\n *\n * @param {String} tagName\n * @param {Object} attributes\n * @param {Array} children\n * @return {Node}\n */\n\nexport function createNode(tagName, attributes, children) {\n  const { object } = attributes\n\n  if (object === 'text') {\n    const text = createText(null, attributes, children)\n    return text\n  }\n\n  const nodes = createChildren(children)\n  const node = Node.create({ ...attributes, nodes })\n  return node\n}\n\n/**\n * Create a selection.\n *\n * @param {String} tagName\n * @param {Object} attributes\n * @param {Array} children\n * @return {Selection}\n */\n\nexport function createSelection(tagName, attributes, children) {\n  const anchor = children.find(c => c instanceof AnchorPoint)\n  const focus = children.find(c => c instanceof FocusPoint)\n  const { marks, focused } = attributes\n  const selection = Selection.create({\n    marks,\n    isFocused: focused,\n    anchor: anchor && {\n      key: anchor.key,\n      offset: anchor.offset,\n      path: anchor.path,\n    },\n    focus: focus && {\n      key: focus.key,\n      offset: focus.offset,\n      path: focus.path,\n    },\n  })\n\n  return selection\n}\n\n/**\n * Create a text node.\n *\n * @param {String} tagName\n * @param {Object} attributes\n * @param {Array} children\n * @return {Text}\n */\n\nexport function createText(tagName, attributes, children) {\n  const { key, marks } = attributes\n  const list = createChildren(children)\n  let node\n\n  if (list.size > 1) {\n    throw new Error(\n      `The <text> hyperscript tag must only contain a single node's worth of children.`\n    )\n  } else if (list.size === 0) {\n    node = Text.create({ key })\n  } else {\n    node = list.first()\n\n    node = preservePoints(node, n => {\n      if (key) n = n.set('key', key)\n      if (marks) n = n.set('marks', Mark.createSet(marks))\n      return n\n    })\n  }\n\n  return node\n}\n\n/**\n * Create a value.\n *\n * @param {String} tagName\n * @param {Object} attributes\n * @param {Array} children\n * @return {Value}\n */\n\nexport function createValue(tagName, attributes, children) {\n  const { data } = attributes\n  const document = children.find(Document.isDocument)\n  let selection = children.find(Selection.isSelection)\n  let anchor\n  let focus\n  let marks\n  let isFocused\n  let annotations = {}\n  const partials = {}\n\n  // Search the document's texts to see if any of them have the anchor or\n  // focus information saved, or annotations applied.\n  if (document) {\n    for (const [node, path] of document.texts()) {\n      const { __anchor, __annotations, __focus } = node\n\n      if (__anchor != null) {\n        anchor = Point.create({ path, key: node.key, offset: __anchor.offset })\n        marks = __anchor.marks\n        isFocused = __anchor.isFocused\n      }\n\n      if (__focus != null) {\n        focus = Point.create({ path, key: node.key, offset: __focus.offset })\n        marks = __focus.marks\n        isFocused = __focus.isFocused\n      }\n\n      if (__annotations != null) {\n        for (const ann of __annotations) {\n          const { id } = ann\n          const partial = partials[id]\n          delete partials[id]\n\n          if (!partial) {\n            ann.key = node.key\n            partials[id] = ann\n            continue\n          }\n\n          const annotation = Annotation.create({\n            key: id,\n            type: ann.type,\n            data: ann.data,\n            anchor: {\n              key: partial.key,\n              path: document.getPath(partial.key),\n              offset: partial.offset,\n            },\n            focus: {\n              path,\n              key: node.key,\n              offset: ann.offset,\n            },\n          })\n\n          annotations[id] = annotation\n        }\n      }\n    }\n  }\n\n  if (Object.keys(partials).length > 0) {\n    throw new Error(\n      `Slate hyperscript must have both a start and an end defined for each annotation using the \\`key=\\` prop.`\n    )\n  }\n\n  if (anchor && !focus) {\n    throw new Error(\n      `Slate hyperscript ranges must have both \\`<anchor />\\` and \\`<focus />\\` defined if one is defined, but you only defined \\`<anchor />\\`. For collapsed selections, use \\`<cursor />\\` instead.`\n    )\n  }\n\n  if (!anchor && focus) {\n    throw new Error(\n      `Slate hyperscript ranges must have both \\`<anchor />\\` and \\`<focus />\\` defined if one is defined, but you only defined \\`<focus />\\`. For collapsed selections, use \\`<cursor />\\` instead.`\n    )\n  }\n\n  if (anchor || focus) {\n    if (!selection) {\n      selection = Selection.create({ anchor, focus, isFocused, marks })\n    } else {\n      selection = selection.setPoints([anchor, focus])\n    }\n  } else if (!selection) {\n    selection = Selection.create()\n  }\n\n  selection = selection.normalize(document)\n\n  if (annotations.length > 0) {\n    annotations = annotations.map(a => a.normalize(document))\n  }\n\n  const value = Value.fromJSON({\n    data,\n    annotations,\n    document,\n    selection,\n    ...attributes,\n  })\n\n  return value\n}\n\n/**\n * Create a list of text nodes.\n *\n * @param {Array} children\n * @return {List<Leaf>}\n */\n\nexport function createChildren(children) {\n  let nodes = Node.createList()\n\n  const push = node => {\n    const last = nodes.last()\n    const isString = typeof node === 'string'\n\n    if (last && last.__string && (isString || node.__string)) {\n      const text = isString ? node : node.text\n      const { length } = last.text\n      const next = preservePoints(last, l => l.insertText(length, text))\n      incrementPoints(node, length)\n      copyPoints(node, next)\n      next.__string = true\n      nodes = nodes.pop().push(next)\n    } else if (isString) {\n      node = Text.create({ text: node })\n      node.__string = true\n      nodes = nodes.push(node)\n    } else {\n      nodes = nodes.push(node)\n    }\n  }\n\n  children.forEach(child => {\n    if (Node.isNodeList(child)) {\n      child.forEach(c => push(c))\n    }\n\n    if (Node.isNode(child)) {\n      push(child)\n    }\n\n    if (typeof child === 'string') {\n      push(child)\n    }\n\n    if (isPoint(child)) {\n      if (!nodes.size) {\n        push('')\n      }\n\n      let last = nodes.last()\n\n      if (last.object !== 'text') {\n        push('')\n        last = nodes.last()\n      }\n\n      if (!last || !last.__string) {\n        push('')\n        last = nodes.last()\n      }\n\n      setPoint(last, child, last.text.length)\n    }\n  })\n\n  return nodes\n}\n\n/**\n * Point classes that can be created at different points in the document and\n * then searched for afterwards, for creating ranges.\n *\n * @type {Class}\n */\n\nclass CursorPoint {\n  constructor(attrs = {}) {\n    const { isFocused = true, marks = null } = attrs\n    this.isFocused = isFocused\n    this.marks = marks\n    this.offset = null\n  }\n}\n\nclass AnchorPoint {\n  constructor(attrs = {}) {\n    const {\n      isFocused = true,\n      key = null,\n      marks = null,\n      offset = null,\n      path = null,\n    } = attrs\n    this.isFocused = isFocused\n    this.key = key\n    this.marks = marks\n    this.offset = offset\n    this.path = path\n  }\n}\n\nclass FocusPoint {\n  constructor(attrs = {}) {\n    const {\n      isFocused = true,\n      key = null,\n      marks = null,\n      offset = null,\n      path = null,\n    } = attrs\n    this.isFocused = isFocused\n    this.key = key\n    this.marks = marks\n    this.offset = offset\n    this.path = path\n  }\n}\n\nclass AnnotationPoint {\n  constructor(attrs) {\n    const { id = null, data = {}, type } = attrs\n    this.id = id\n    this.offset = null\n    this.type = type\n    this.data = data\n  }\n}\n\n/**\n * Increment any existing `point` on object by `n`.\n *\n * @param {Any} object\n * @param {Number} n\n */\n\nfunction incrementPoints(object, n) {\n  const { __anchor, __focus, __annotations } = object\n\n  if (__anchor != null) {\n    __anchor.offset += n\n  }\n\n  if (__focus != null && __focus !== __anchor) {\n    __focus.offset += n\n  }\n\n  if (__annotations != null) {\n    __annotations.forEach(a => (a.offset += n))\n  }\n}\n\n/**\n * Check whether an `object` is a point.\n *\n * @param {Any} object\n * @return {Boolean}\n */\n\nfunction isPoint(object) {\n  return (\n    object instanceof AnchorPoint ||\n    object instanceof CursorPoint ||\n    object instanceof AnnotationPoint ||\n    object instanceof FocusPoint\n  )\n}\n\n/**\n * Preserve any point information on an object.\n *\n * @param {Any} object\n * @param {Function} updator\n * @return {Any}\n */\n\nfunction preservePoints(object, updator) {\n  const next = updator(object)\n  copyPoints(object, next)\n  return next\n}\n\nfunction copyPoints(object, other) {\n  const { __anchor, __focus, __annotations } = object\n  if (__anchor != null) other.__anchor = __anchor\n  if (__focus != null) other.__focus = __focus\n  if (__annotations != null) other.__annotations = __annotations\n}\n\n/**\n * Set a `point` on an `object`.\n *\n * @param {Any} object\n * @param {*Point} point\n * @param {Number} offset\n */\n\nfunction setPoint(object, point, offset) {\n  if (point instanceof AnchorPoint || point instanceof CursorPoint) {\n    point.offset = offset\n    object.__anchor = point\n  }\n\n  if (point instanceof FocusPoint || point instanceof CursorPoint) {\n    point.offset = offset\n    object.__focus = point\n  }\n\n  if (point instanceof AnnotationPoint) {\n    point.offset = offset\n    object.__annotations = object.__annotations || []\n    object.__annotations = object.__annotations.concat(point)\n  }\n}\n","import isPlainObject from 'is-plain-object'\n\nimport {\n  createAnchor,\n  createBlock,\n  createCursor,\n  createAnnotation,\n  createDocument,\n  createFocus,\n  createInline,\n  createMark,\n  createNode,\n  createSelection,\n  createText,\n  createValue,\n} from './creators'\n\n/**\n * Create a Slate hyperscript function with `options`.\n *\n * @param {Object} options\n * @return {Function}\n */\n\nfunction createHyperscript(options = {}) {\n  const { blocks = {}, inlines = {}, marks = {}, annotations = {} } = options\n\n  const creators = {\n    anchor: createAnchor,\n    annotation: createAnnotation,\n    block: createBlock,\n    cursor: createCursor,\n    document: createDocument,\n    focus: createFocus,\n    inline: createInline,\n    mark: createMark,\n    node: createNode,\n    selection: createSelection,\n    text: createText,\n    value: createValue,\n    ...(options.creators || {}),\n  }\n\n  for (const key in blocks) {\n    creators[key] = normalizeCreator(blocks[key], createBlock)\n  }\n\n  for (const key in inlines) {\n    creators[key] = normalizeCreator(inlines[key], createInline)\n  }\n\n  for (const key in marks) {\n    creators[key] = normalizeCreator(marks[key], createMark)\n  }\n\n  for (const key in annotations) {\n    creators[key] = normalizeCreator(annotations[key], createAnnotation)\n  }\n\n  function create(tagName, attributes, ...children) {\n    const creator = creators[tagName]\n\n    if (!creator) {\n      throw new Error(`No hyperscript creator found for tag: \"${tagName}\"`)\n    }\n\n    if (attributes == null) {\n      attributes = {}\n    }\n\n    if (!isPlainObject(attributes)) {\n      children = [attributes].concat(children)\n      attributes = {}\n    }\n\n    children = children\n      .filter(child => Boolean(child))\n      .reduce((memo, child) => memo.concat(child), [])\n\n    const ret = creator(tagName, attributes, children)\n    return ret\n  }\n\n  return create\n}\n\n/**\n * Normalize a `creator` of `value`.\n *\n * @param {Function|Object|String} value\n * @param {Function} creator\n * @return {Function}\n */\n\nfunction normalizeCreator(value, creator) {\n  if (typeof value === 'function') {\n    return value\n  }\n\n  if (typeof value === 'string') {\n    value = { type: value }\n  }\n\n  if (isPlainObject(value)) {\n    return (tagName, attributes, children) => {\n      const { key, ...rest } = attributes\n      const attrs = {\n        ...value,\n        key,\n        data: {\n          ...(value.data || {}),\n          ...rest,\n        },\n      }\n\n      return creator(tagName, attrs, children)\n    }\n  }\n\n  throw new Error(\n    `Slate hyperscript creators can be either functions, objects or strings, but you passed: ${value}`\n  )\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default createHyperscript()\nexport { createHyperscript }\n"],"names":["uid","createAnchor","tagName","attributes","children","AnchorPoint","createBlock","attrs","object","block","createNode","createCursor","CursorPoint","createAnnotation","key","data","type","AnnotationPoint","id","texts","createChildren","first","last","start","end","text","length","createDocument","document","createFocus","FocusPoint","createInline","inline","createMark","mark","marks","Mark","createSet","list","node","size","Error","Text","create","preservePoints","n","set","union","createText","nodes","Node","createSelection","anchor","find","c","focus","focused","selection","Selection","offset","path","createValue","Document","isDocument","isSelection","isFocused","annotations","partials","__anchor","__annotations","__focus","Point","ann","partial","annotation","Annotation","getPath","Object","keys","setPoints","normalize","map","a","value","Value","fromJSON","createList","push","isString","__string","next","l","insertText","pop","forEach","isNodeList","child","isNode","isPoint","incrementPoints","updator","copyPoints","other","setPoint","point","concat","createHyperscript","options","blocks","inlines","creators","normalizeCreator","creator","isPlainObject","filter","Boolean","reduce","memo","ret","rest"],"mappings":"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"}